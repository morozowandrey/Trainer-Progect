{
  "_args": [
    [
      {
        "raw": "rev",
        "scope": null,
        "escapedName": "rev",
        "name": "rev",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\WWW\\MIAMI-TRAINER"
    ]
  ],
  "_from": "rev@latest",
  "_id": "rev@0.0.1",
  "_inCache": true,
  "_location": "/rev",
  "_npmUser": {
    "name": "tim-smart",
    "email": "tim@fostle.com"
  },
  "_npmVersion": "1.2.25",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rev",
    "scope": null,
    "escapedName": "rev",
    "name": "rev",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/rev/-/rev-0.0.1.tgz",
  "_shasum": "de8420954017bb82bb5bb8974ccc171760eb048c",
  "_shrinkwrap": null,
  "_spec": "rev",
  "_where": "D:\\WWW\\MIAMI-TRAINER",
  "author": {
    "name": "Tim Smart",
    "email": "tim@fostle.com"
  },
  "bugs": {
    "url": "https://github.com/tim-smart/node-rev/issues",
    "email": "tim@fostle.com"
  },
  "dependencies": {
    "node-redis": "0.1.x"
  },
  "description": "A (r)edis (ev)ent emitter for node.js.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "de8420954017bb82bb5bb8974ccc171760eb048c",
    "tarball": "https://registry.npmjs.org/rev/-/rev-0.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/tim-smart/node-rev",
  "main": "./lib/rev.js",
  "maintainers": [
    {
      "name": "tim-smart",
      "email": "tim@fostle.com"
    }
  ],
  "name": "rev",
  "optionalDependencies": {},
  "readme": "# node-rev\n\nA (r)edis (ev)ent emitter for node.js.\n\n\n## Installing\n\nInstall with npm:\n\n    npm install rev\n\n\n## Usage\n\n```javascript\nvar Emitter = require('rev').Emitter\nvar emitter = new Emitter({ host : 'localhost', port : 6379, auth : 'xyz' })\n\nfunction firstSub () {\n  emitter.emit('some:event', { json : 'able' }, 'arguments only')\n}\n\nemitter.on('some:event', function (data, str) { /* ... */ }, firstSub)\nemitter.pon('some:*', function (event, data, str) {\n  // event is the matched event string\n  // data and str are the arguments passed\n})\n```\n\nWill work across multiple processes of course :) Uses redis pub/sub as the\nunderlying transport.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/tim-smart/node-rev.git"
  },
  "version": "0.0.1"
}
